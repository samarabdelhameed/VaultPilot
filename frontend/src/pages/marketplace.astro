---
import Layout from "../layouts/Layout.astro";
import Navbar from "../components/Navbar.astro";
import Footer from "../components/Footer.astro";
import NFTCard from "../components/NFTCard";
import CTAButton from "../components/CTAButton";

const vaults = [
  {
    name: "DeFi Yield Maximizer",
    image:
      "https://images.pexels.com/photos/730547/pexels-photo-730547.jpeg?auto=compress&cs=tinysrgb&w=400",
    price: "2.5",
    roi: "24.7",
    creator: "AlphaStrategies",
    rarity: "Legendary",
    type: "High Yield",
  },
  {
    name: "Stable Coin Fortress",
    image:
      "https://images.pexels.com/photos/4164418/pexels-photo-4164418.jpeg?auto=compress&cs=tinysrgb&w=400",
    price: "1.8",
    roi: "12.3",
    creator: "SafeHarbor",
    rarity: "Epic",
    type: "Low Risk",
  },
  {
    name: "Liquidity Mining Pro",
    image:
      "https://images.pexels.com/photos/6801648/pexels-photo-6801648.jpeg?auto=compress&cs=tinysrgb&w=400",
    price: "3.2",
    roi: "31.5",
    creator: "YieldHunters",
    rarity: "Legendary",
    type: "High Yield",
  },
  {
    name: "Blue Chip Accumulator",
    image:
      "https://images.pexels.com/photos/844124/pexels-photo-844124.jpeg?auto=compress&cs=tinysrgb&w=400",
    price: "4.1",
    roi: "18.9",
    creator: "InstitutionalFlow",
    rarity: "Rare",
    type: "Low Risk",
  },
  {
    name: "Arbitrage Engine",
    image:
      "https://images.pexels.com/photos/3483098/pexels-photo-3483098.jpeg?auto=compress&cs=tinysrgb&w=400",
    price: "2.9",
    roi: "27.2",
    creator: "MEVCapital",
    rarity: "Epic",
    type: "High Yield",
    new: true,
  },
  {
    name: "Governance Token Farm",
    image:
      "https://images.pexels.com/photos/7414020/pexels-photo-7414020.jpeg?auto=compress&cs=tinysrgb&w=400",
    price: "1.5",
    roi: "15.4",
    creator: "DAOVentures",
    rarity: "Rare",
    type: "Low Risk",
    new: true,
  },
  {
    name: "Cross-Chain Bridge",
    image:
      "https://images.pexels.com/photos/4960464/pexels-photo-4960464.jpeg?auto=compress&cs=tinysrgb&w=400",
    price: "5.3",
    roi: "35.8",
    creator: "MultiChainLabs",
    rarity: "Legendary",
    type: "High Yield",
  },
  {
    name: "Options Strategy Vault",
    image:
      "https://images.pexels.com/photos/3831645/pexels-photo-3831645.jpeg?auto=compress&cs=tinysrgb&w=400",
    price: "2.1",
    roi: "22.1",
    creator: "DerivativesPro",
    rarity: "Epic",
    type: "Low Risk",
    new: true,
  },
];
---

<Layout title="Marketplace - VaultPilot">
  <Navbar />
  <main class="min-h-screen py-20 px-4 sm:px-6 lg:px-8">
    <div class="max-w-7xl mx-auto">
      <!-- Header -->
      <div class="text-center mb-12 animate-fade-in">
        <h1 class="text-4xl font-bold text-white mb-4">
          NFT Vault <span
            class="bg-gradient-to-r from-primary-green to-primary-purple bg-clip-text text-transparent"
            >Marketplace</span
          >
        </h1>
        <p class="text-xl text-gray-300 max-w-2xl mx-auto mb-8">
          Discover and invest in tokenized DeFi vaults. Each NFT represents
          ownership in high-performing investment strategies.
        </p>
        <!-- Filters -->
        <div class="flex flex-wrap justify-center gap-4 mb-8" id="filters">
          <button
            class="px-6 py-2 bg-gradient-to-r from-primary-green to-primary-purple text-black font-medium rounded-full"
            data-filter="all"
          >
            All Vaults
          </button>
          <button
            class="px-6 py-2 bg-gray-800/50 border border-gray-600 text-gray-300 hover:border-primary-green hover:text-primary-green rounded-full transition-all duration-200"
            data-filter="High Yield"
          >
            High Yield
          </button>
          <button
            class="px-6 py-2 bg-gray-800/50 border border-gray-600 text-gray-300 hover:border-primary-green hover:text-primary-green rounded-full transition-all duration-200"
            data-filter="Low Risk"
          >
            Low Risk
          </button>
          <button
            class="px-6 py-2 bg-gray-800/50 border border-gray-600 text-gray-300 hover:border-primary-green hover:text-primary-green rounded-full transition-all duration-200"
            data-filter="new"
          >
            New Listings
          </button>
        </div>
      </div>
      <!-- NFT Grid -->
      <div
        class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-8"
        id="vaults-grid"
      >
        {
          vaults.map((vault) => (
            <NFTCard
              client:load
              name={vault.name}
              image={vault.image}
              price={vault.price}
              roi={vault.roi}
              creator={vault.creator}
              rarity={vault.rarity as "Legendary" | "Epic" | "Rare" | "Common"}
              data-type={vault.type}
              data-new={vault.new ? "true" : "false"}
            />
          ))
        }
      </div>
      <script type="module">
        const filterButtons = document.querySelectorAll("#filters button");
        const cards = document.querySelectorAll("#vaults-grid > *");
        filterButtons.forEach((btn) => {
          btn.addEventListener("click", () => {
            filterButtons.forEach((b) =>
              b.classList.remove(
                "ring-2",
                "ring-primary-green",
                "bg-gradient-to-r",
                "from-primary-green",
                "to-primary-purple",
                "text-black"
              )
            );
            btn.classList.add(
              "ring-2",
              "ring-primary-green",
              "bg-gradient-to-r",
              "from-primary-green",
              "to-primary-purple",
              "text-black"
            );
            const filter = btn.dataset.filter;
            cards.forEach((card) => {
              if (filter === "all") {
                card.style.display = "";
              } else if (filter === "new") {
                card.style.display =
                  card.getAttribute("data-new") === "true" ? "" : "none";
              } else {
                card.style.display =
                  card.getAttribute("data-type") === filter ? "" : "none";
              }
            });
          });
        });
      </script>
      <!-- Load More -->
      <div class="text-center mt-16">
        <CTAButton variant="outline" size="lg" client:load>
          Load More Vaults
        </CTAButton>
      </div>
    </div>
  </main>
  <Footer />
</Layout>
